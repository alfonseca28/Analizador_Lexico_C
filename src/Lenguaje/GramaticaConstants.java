/* Generated By:JavaCC: Do not edit this line. GramaticaConstants.java */
package Lenguaje;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface GramaticaConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int LIBRERIA = 5;
  /** RegularExpression Id. */
  int MAIN = 6;
  /** RegularExpression Id. */
  int RETURN = 7;
  /** RegularExpression Id. */
  int INT = 8;
  /** RegularExpression Id. */
  int FLOAT = 9;
  /** RegularExpression Id. */
  int CHAR = 10;
  /** RegularExpression Id. */
  int BOOL = 11;
  /** RegularExpression Id. */
  int SHORT = 12;
  /** RegularExpression Id. */
  int STRING = 13;
  /** RegularExpression Id. */
  int DOUBLE = 14;
  /** RegularExpression Id. */
  int VOID = 15;
  /** RegularExpression Id. */
  int SUMA = 16;
  /** RegularExpression Id. */
  int RESTA = 17;
  /** RegularExpression Id. */
  int MULTIPLICAR = 18;
  /** RegularExpression Id. */
  int ASIGNAR = 19;
  /** RegularExpression Id. */
  int DIVISION = 20;
  /** RegularExpression Id. */
  int MODULO = 21;
  /** RegularExpression Id. */
  int INCREMENTO = 22;
  /** RegularExpression Id. */
  int DECREMENTO = 23;
  /** RegularExpression Id. */
  int IGUAL = 24;
  /** RegularExpression Id. */
  int DIFERENTE = 25;
  /** RegularExpression Id. */
  int MENOR = 26;
  /** RegularExpression Id. */
  int MAYOR = 27;
  /** RegularExpression Id. */
  int MENORIGUAL = 28;
  /** RegularExpression Id. */
  int MAYORIGUAL = 29;
  /** RegularExpression Id. */
  int AMPERSAND = 30;
  /** RegularExpression Id. */
  int AND = 31;
  /** RegularExpression Id. */
  int OR = 32;
  /** RegularExpression Id. */
  int NOT = 33;
  /** RegularExpression Id. */
  int CICLOFOR = 34;
  /** RegularExpression Id. */
  int CICLOWHILE = 35;
  /** RegularExpression Id. */
  int CICLODO = 36;
  /** RegularExpression Id. */
  int IF = 37;
  /** RegularExpression Id. */
  int ELSE = 38;
  /** RegularExpression Id. */
  int SWITCH = 39;
  /** RegularExpression Id. */
  int CASE = 40;
  /** RegularExpression Id. */
  int BREAK = 41;
  /** RegularExpression Id. */
  int SCANF = 42;
  /** RegularExpression Id. */
  int PRINTF = 43;
  /** RegularExpression Id. */
  int LLAVEIZQ = 44;
  /** RegularExpression Id. */
  int LLAVEDER = 45;
  /** RegularExpression Id. */
  int PARENTIZQ = 46;
  /** RegularExpression Id. */
  int PARENTDER = 47;
  /** RegularExpression Id. */
  int SENTFIN = 48;
  /** RegularExpression Id. */
  int CORCHETEIZQ = 49;
  /** RegularExpression Id. */
  int CORCHETEDER = 50;
  /** RegularExpression Id. */
  int COMA = 51;
  /** RegularExpression Id. */
  int PUNTO = 52;
  /** RegularExpression Id. */
  int DOSPUNTO = 53;
  /** RegularExpression Id. */
  int NOMBREVAR = 54;
  /** RegularExpression Id. */
  int CADENA = 55;
  /** RegularExpression Id. */
  int NUMERO = 56;
  /** RegularExpression Id. */
  int NOMLIBRERIA = 57;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\t\"",
    "\"#include\"",
    "\"main\"",
    "\"return\"",
    "\"int\"",
    "\"float\"",
    "\"char\"",
    "\"bool\"",
    "\"short\"",
    "\"string\"",
    "\"double\"",
    "\"void\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"=\"",
    "\"/\"",
    "\"%\"",
    "\"++\"",
    "\"--\"",
    "\"==\"",
    "\"!=\"",
    "\"<\"",
    "\">\"",
    "\"<=\"",
    "\">=\"",
    "\"&\"",
    "\"&&\"",
    "\"||\"",
    "\"!\"",
    "\"for\"",
    "\"while\"",
    "\"do\"",
    "\"if\"",
    "\"else\"",
    "\"switch\"",
    "\"case\"",
    "\"break\"",
    "\"scanf\"",
    "\"printf\"",
    "\"{\"",
    "\"}\"",
    "\"(\"",
    "\")\"",
    "\";\"",
    "\"[\"",
    "\"]\"",
    "\",\"",
    "\".\"",
    "\":\"",
    "<NOMBREVAR>",
    "<CADENA>",
    "<NUMERO>",
    "<NOMLIBRERIA>",
  };

}
